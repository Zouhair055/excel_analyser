import requests
import os

# Configuration
API_URL = 'http://localhost:5001/api/excel'
TEST_FILE = 'test_data.xlsx'

def test_upload():
    """Test l'upload et le traitement d'un fichier Excel"""
    
    print("üß™ Test de l'API Excel Analyzer")
    print("=" * 50)
    
    # V√©rifier que le fichier de test existe
    if not os.path.exists(TEST_FILE):
        print("‚ùå Fichier de test non trouv√©:", TEST_FILE)
        return False
    
    print(f"üìÅ Fichier de test: {TEST_FILE}")
    
    try:
        # Test 1: Upload du fichier
        print("\n1Ô∏è‚É£ Test d'upload...")
        
        with open(TEST_FILE, 'rb') as f:
            files = {'file': f}
            response = requests.post(f'{API_URL}/upload', files=files)
        
        if response.status_code == 200:
            print("‚úÖ Upload r√©ussi!")
            data = response.json()
            print(f"   - Fichier original: {data['original_file']}")
            print(f"   - Fichier trait√©: {data['processed_file']}")
            print(f"   - Colonnes d√©tect√©es: {len(data['columns_info']['columns'])}")
            print(f"   - Lignes: {data['columns_info']['shape'][0]}")
            
            # Test 2: T√©l√©chargement du fichier trait√©
            print("\n2Ô∏è‚É£ Test de t√©l√©chargement...")
            
            download_response = requests.get(f"{API_URL}/download/{data['processed_file']}")
            
            if download_response.status_code == 200:
                print("‚úÖ T√©l√©chargement r√©ussi!")
                
                # Sauvegarder le fichier t√©l√©charg√©
                output_file = f"downloaded_{data['processed_file']}"
                with open(output_file, 'wb') as f:
                    f.write(download_response.content)
                print(f"   - Fichier sauvegard√©: {output_file}")
                
                return True
            else:
                print(f"‚ùå Erreur de t√©l√©chargement: {download_response.status_code}")
                return False
        else:
            print(f"‚ùå Erreur d'upload: {response.status_code}")
            print(f"   Message: {response.text}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå Impossible de se connecter au serveur")
        print("   V√©rifiez que le serveur Flask fonctionne sur le port 5001")
        return False
    except Exception as e:
        print(f"‚ùå Erreur inattendue: {e}")
        return False

if __name__ == "__main__":
    success = test_upload()
    print("\n" + "=" * 50)
    if success:
        print("üéâ Tous les tests sont pass√©s avec succ√®s!")
    else:
        print("üí• Certains tests ont √©chou√©")

