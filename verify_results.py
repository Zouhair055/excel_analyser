import pandas as pd

def verify_processing():
    """V√©rifie que les r√®gles ont √©t√© correctement appliqu√©es"""
    
    print("üîç V√©rification du traitement Excel")
    print("=" * 50)
    
    # Charger les fichiers
    original_file = 'test_data.xlsx'
    processed_file = 'downloaded_processed_test_data.xlsx'
    
    try:
        df_original = pd.read_excel(original_file)
        df_processed = pd.read_excel(processed_file)
        
        print("üìä Donn√©es originales:")
        print(df_original.head())
        print("\nüìä Donn√©es trait√©es:")
        print(df_processed.head())
        
        print("\nüîç V√©rification des r√®gles:")
        
        # R√®gle 1: ADVICEPRO
        advicepro_rows = df_processed[df_processed['Description'].str.contains('ADVICEPRO', na=False)]
        if not advicepro_rows.empty:
            print("‚úÖ R√®gle ADVICEPRO appliqu√©e:")
            for idx, row in advicepro_rows.iterrows():
                print(f"   - Ligne {idx}: Nature='{row['Nature']}', Descrip='{row['Descrip']}', Service='{row['Service']}'")
        
        # R√®gle 2: Extraction de r√©f√©rences
        ref_filled = df_processed[df_processed['Reference'].notna() & (df_processed['Reference'] != '')]
        if not ref_filled.empty:
            print("‚úÖ R√®gle d'extraction de r√©f√©rences appliqu√©e:")
            for idx, row in ref_filled.iterrows():
                print(f"   - Ligne {idx}: Reference='{row['Reference']}'")
        
        # R√®gle 3: USD ‚Üí Import
        usd_rows = df_processed[df_processed['Bank account'].str.contains('USD', na=False)]
        if not usd_rows.empty:
            print("‚úÖ R√®gle USD ‚Üí Import appliqu√©e:")
            for idx, row in usd_rows.iterrows():
                print(f"   - Ligne {idx}: Bank account='{row['Bank account']}', Nature='{row['Nature']}'")
        
        print("\nüìà Statistiques:")
        print(f"   - Lignes trait√©es: {len(df_processed)}")
        print(f"   - Colonnes: {len(df_processed.columns)}")
        print(f"   - Colonnes avec donn√©es: {len([col for col in df_processed.columns if not df_processed[col].isna().all()])}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la v√©rification: {e}")
        return False

if __name__ == "__main__":
    verify_processing()

